version: "3.2"

services:
  cub_sign_in_app:
    restart: always
    build:
      context: ./
      dockerfile: ./app/Dockerfile
    ports:
      - "8000:8000"
    command: >
      gunicorn
          --workers 1
          --access-logfile -
          --log-level info
          --bind :8000
          app:app
    environment:
      - CUB_SIGN_IN_CONFIG=prod.cfg
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
    links:
      - redis
      - celery
    networks:
      - proxy
      - tasks
    volumes:
      - datavolume:/data
    labels:
      - "traefik.enable=true"
      - "traefik.backend=flask"
      - "traefik.frontend.rule=${TRAEFIK_FRONTEND_RULE}"
      - "traefik.domain=${TRAEFIK_DOMAIN}"

  redis:
    restart: always
    image: redis:5.0.1-stretch
    ports:
      - "6379:6379"
    networks:
      - tasks

  celery:
    restart: always
    build:
      context: ./
      dockerfile: ./celery-queue/Dockerfile
    command: celery worker --loglevel=WARN --app tasks
    environment:
      - CUB_SIGN_IN_CONFIG=prod.cfg
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
      - C_FORCE_ROOT=true
    links:
      - redis
    volumes:
      - datavolume:/data
    networks:
      - tasks

  flower:
    restart: always
    build:
      context: ./
      dockerfile: ./celery-queue/Dockerfile
    ports:
      - "5555:5555"
    depends_on:
      - celery
    environment:
      - CUB_SIGN_IN_CONFIG=prod.cfg
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
      - C_FORCE_ROOT=true
    networks:
      - tasks
    command: celery --loglevel=WARN -A tasks flower

  traefik:
    restart: always
    # Use latest for now because 1.7.4 gives an error 
    image: traefik:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    environment:
      - DO_AUTH_TOKEN=${DO_AUTH_TOKEN}
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - proxy

volumes:
  datavolume:

networks:
  proxy:
    driver: bridge
  tasks:
    driver: bridge
